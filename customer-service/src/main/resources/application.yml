# ==========================================
# üåê SERVER CONFIGURATION
# ==========================================
server:
  port: 6001

management:
  server:
    port: 8087
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true

# ==========================================
# üß© SPRING APPLICATION CONFIGURATION
# ==========================================
spring:
  profiles:
    active: dev
  application:
    name: customer-service

  # ---------------------------
  # üóÑÔ∏è MONGODB CONFIGURATION
  # ---------------------------
  data:
    mongodb:
      uri: mongodb://localhost:27017
      database: elevens-bank

  # ---------------------------
  # ‚öôÔ∏è KAFKA CONFIGURATION
  # ---------------------------
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: customer-service-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    listener:
      ack-mode: manual
      missing-topics-fatal: false

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    topic:
      user-created: bank.user.event.v1
      customer-events: customer.events

# ==========================================
# üß† LOGGING
# ==========================================
logging:
  level:
    root: INFO
    org.springframework.kafka: INFO
    com.customers: DEBUG
